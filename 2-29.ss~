(define (make-mobile left right)
  (list left right))
(define (make-branch length structure)
  (list length structure))

(define (left-branch mobile) (car mobile))
(define (right-branch mobile) (cdr mobile))

(define (branch-length branch)
  (car branch))
(define (branch-structure branch)
  (cdr branch))
(define (weight? struct)
  (not (pair? struct)))

(define (tot-weight mobile)
  (+ (cost (left-branch mobile))
     (cost (right-branch mobile))))


(define (cost branch)
  (newline)
  (display branch)
  (cond ((null? branch) 0)
        ((weight? (branch-structure branch)) (branch-structure branch))
        (else
          (+ (cost (left-branch (branch-structure branch)))
             (cost (right-branch (branch-structure branch)))))))
        